/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.cdk.hbase.data;  
@SuppressWarnings("all")
/** A party record */
@org.apache.avro.specific.AvroGenerated
public class Party extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Party\",\"namespace\":\"com.cloudera.cdk.hbase.data\",\"doc\":\"A party record\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"mapping\":{\"type\":\"key\",\"value\":\"0\"}},{\"name\":\"created\",\"type\":\"long\",\"mapping\":{\"type\":\"column\",\"value\":\"meta:creationDate\"}},{\"name\":\"description\",\"type\":\"string\",\"mapping\":{\"type\":\"column\",\"value\":\"meta:favoriteColor\"}},{\"name\":\"type\",\"type\":\"int\",\"default\":0,\"mapping\":{\"type\":\"column\",\"value\":\"meta:age\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.CharSequence id;
   private long created;
   private java.lang.CharSequence description;
   private int type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public Party() {}

  /**
   * All-args constructor.
   */
  public Party(java.lang.CharSequence id, java.lang.Long created, java.lang.CharSequence description, java.lang.Integer type) {
    this.id = id;
    this.created = created;
    this.description = description;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return created;
    case 2: return description;
    case 3: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: created = (java.lang.Long)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: type = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Gets the value of the 'created' field.
   */
  public java.lang.Long getCreated() {
    return created;
  }


  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }


  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.Integer getType() {
    return type;
  }


  /** Creates a new Party RecordBuilder */
  public static com.cloudera.cdk.hbase.data.Party.Builder newBuilder() {
    return new com.cloudera.cdk.hbase.data.Party.Builder();
  }
  
  /** Creates a new Party RecordBuilder by copying an existing Builder */
  public static com.cloudera.cdk.hbase.data.Party.Builder newBuilder(com.cloudera.cdk.hbase.data.Party.Builder other) {
    return new com.cloudera.cdk.hbase.data.Party.Builder(other);
  }
  
  /** Creates a new Party RecordBuilder by copying an existing Party instance */
  public static com.cloudera.cdk.hbase.data.Party.Builder newBuilder(com.cloudera.cdk.hbase.data.Party other) {
    return new com.cloudera.cdk.hbase.data.Party.Builder(other);
  }
  
  /**
   * RecordBuilder for Party instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Party>
    implements org.apache.avro.data.RecordBuilder<Party> {

    private java.lang.CharSequence id;
    private long created;
    private java.lang.CharSequence description;
    private int type;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.cdk.hbase.data.Party.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.cdk.hbase.data.Party.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created)) {
        this.created = data().deepCopy(fields()[1].schema(), other.created);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Party instance */
    private Builder(com.cloudera.cdk.hbase.data.Party other) {
            super(com.cloudera.cdk.hbase.data.Party.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.created)) {
        this.created = data().deepCopy(fields()[1].schema(), other.created);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.cloudera.cdk.hbase.data.Party.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.cloudera.cdk.hbase.data.Party.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'created' field */
    public java.lang.Long getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public com.cloudera.cdk.hbase.data.Party.Builder setCreated(long value) {
      validate(fields()[1], value);
      this.created = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'created' field */
    public com.cloudera.cdk.hbase.data.Party.Builder clearCreated() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.cloudera.cdk.hbase.data.Party.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public com.cloudera.cdk.hbase.data.Party.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.Integer getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.cloudera.cdk.hbase.data.Party.Builder setType(int value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'type' field */
    public com.cloudera.cdk.hbase.data.Party.Builder clearType() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Party build() {
      try {
        Party record = new Party();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.created = fieldSetFlags()[1] ? this.created : (java.lang.Long) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
